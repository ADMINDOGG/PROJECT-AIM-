--can use?
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Global Variables
local guiVisible = true
local showHealth = true
local whichListEnabled = false
local excludedPlayers = {}
local targetBody = false
local wallCheckEnabled = false

-- Theme Colors
local THEME = {
    PRIMARY = Color3.fromRGB(17, 17, 26),
    SECONDARY = Color3.fromRGB(25, 25, 35),
    ACCENT = Color3.fromRGB(90, 100, 240),
    SUCCESS = Color3.fromRGB(40, 180, 120),
    TEXT_PRIMARY = Color3.fromRGB(255, 255, 255),
    TEXT_SECONDARY = Color3.fromRGB(180, 180, 200),
    BORDER = Color3.fromRGB(60, 60, 80)
}

local highlightColor = Color3.fromRGB(255, 255, 255)
local colors = {
    {name = "White", color = Color3.fromRGB(255, 255, 255)},
    {name = "Red", color = Color3.fromRGB(255, 0, 0)},
    {name = "Green", color = Color3.fromRGB(0, 255, 0)},
    {name = "Blue", color = Color3.fromRGB(0, 0, 255)},
    {name = "Yellow", color = Color3.fromRGB(255, 255, 0)},
    {name = "Purple", color = Color3.fromRGB(255, 0, 255)}
}
local currentColorIndex = 1

-- Create Main GUI
local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui

-- Create Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 850, 0, 220)
frame.Position = UDim2.new(0.5, -425, 0.1, 0)
frame.BackgroundColor3 = THEME.PRIMARY
frame.BorderSizePixel = 0
frame.ClipsDescendants = true
frame.Parent = gui

-- Add Shadow
local shadowHolder = Instance.new("Frame")
shadowHolder.BackgroundTransparency = 1
shadowHolder.Size = UDim2.new(1, 0, 1, 0)
shadowHolder.ZIndex = 0
shadowHolder.Parent = frame

local shadow = Instance.new("ImageLabel")
shadow.Image = "rbxassetid://7912134082"
shadow.ImageColor3 = Color3.new(0, 0, 0)
shadow.ImageTransparency = 0.6
shadow.Size = UDim2.new(1, 40, 1, 40)
shadow.Position = UDim2.new(0, -20, 0, -20)
shadow.BackgroundTransparency = 1
shadow.Parent = shadowHolder

-- Add Corner Radius
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = frame

-- Add Gradient
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, THEME.SECONDARY),
    ColorSequenceKeypoint.new(1, THEME.PRIMARY)
})
gradient.Rotation = 45
gradient.Parent = frame

-- Add Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 5)
title.BackgroundTransparency = 1
title.Text = "!DOG! Combat Assistant"
title.TextColor3 = THEME.TEXT_PRIMARY
title.TextSize = 24
title.Font = Enum.Font.GothamBold
title.Parent = frame
-- Add Sections
local function createSection(name, position)
    local section = Instance.new("Frame")
    section.Size = UDim2.new(0.25, -20, 1, -60)
    section.Position = position
    section.BackgroundColor3 = THEME.SECONDARY
    section.BackgroundTransparency = 0.7
    section.Parent = frame

    local sectionCorner = Instance.new("UICorner")
    sectionCorner.CornerRadius = UDim.new(0, 8)
    sectionCorner.Parent = section

    local sectionStroke = Instance.new("UIStroke")
    sectionStroke.Color = THEME.BORDER
    sectionStroke.Thickness = 1
    sectionStroke.Parent = section

    local sectionTitle = Instance.new("TextLabel")
    sectionTitle.Size = UDim2.new(1, 0, 0, 30)
    sectionTitle.Position = UDim2.new(0, 0, 0, -15)
    sectionTitle.BackgroundTransparency = 1
    sectionTitle.Text = name
    sectionTitle.TextColor3 = THEME.TEXT_SECONDARY
    sectionTitle.TextSize = 14
    sectionTitle.Font = Enum.Font.GothamBold
    sectionTitle.Parent = section

    return section
end

-- Create Sections
local combatSection = createSection("Combat", UDim2.new(0, 15, 0, 50))
local visualSection = createSection("Visual", UDim2.new(0.25, 15, 0, 50))
local settingsSection = createSection("Settings", UDim2.new(0.5, 15, 0, 50))
local extraSection = createSection("Extra", UDim2.new(0.75, 15, 0, 50))

-- Function to create buttons
local function createButton(text, parent, yOffset)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.9, 0, 0, 35)
    button.Position = UDim2.new(0.5, 0, 0, yOffset)
    button.AnchorPoint = Vector2.new(0.5, 0)
    button.BackgroundColor3 = THEME.SECONDARY
    button.Text = text
    button.TextColor3 = THEME.TEXT_PRIMARY
    button.TextSize = 14
    button.Font = Enum.Font.GothamBold
    button.AutoButtonColor = false
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = THEME.BORDER
    stroke.Thickness = 1.5
    stroke.Transparency = 0.5
    stroke.Parent = button
    
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 200, 200))
    })
    buttonGradient.Transparency = NumberSequence.new(0.95)
    buttonGradient.Rotation = 90
    buttonGradient.Parent = button
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            BackgroundColor3 = THEME.ACCENT
        }):Play()
        
        TweenService:Create(buttonGradient, TweenInfo.new(0.3), {
            Transparency = NumberSequence.new(0.85)
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            BackgroundColor3 = THEME.SECONDARY
        }):Play()
        
        TweenService:Create(buttonGradient, TweenInfo.new(0.3), {
            Transparency = NumberSequence.new(0.95)
        }):Play()
    end)
    
    return button
end

local function createTextBox(placeholder, parent, yOffset)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(0.9, 0, 0, 35)
    container.Position = UDim2.new(0.5, 0, 0, yOffset)
    container.AnchorPoint = Vector2.new(0.5, 0)
    container.BackgroundColor3 = THEME.SECONDARY
    container.BackgroundTransparency = 0.5
    container.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = container
    
    local textbox = Instance.new("TextBox")
    textbox.Size = UDim2.new(0.95, 0, 0.9, 0)
    textbox.Position = UDim2.new(0.5, 0, 0.5, 0)
    textbox.AnchorPoint = Vector2.new(0.5, 0.5)
    textbox.BackgroundTransparency = 1
    textbox.PlaceholderText = placeholder
    textbox.PlaceholderColor3 = THEME.TEXT_SECONDARY
    textbox.TextColor3 = THEME.TEXT_PRIMARY
    textbox.TextSize = 14
    textbox.Font = Enum.Font.GothamSemibold
    textbox.ClearTextOnFocus = false
    textbox.Parent = container
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = THEME.ACCENT
    stroke.Thickness = 1.5
    stroke.Transparency = 0.7
    stroke.Parent = container
    
    textbox.Focused:Connect(function()
        TweenService:Create(stroke, TweenInfo.new(0.3), {
            Transparency = 0,
            Color = THEME.ACCENT
        }):Play()
        
        TweenService:Create(container, TweenInfo.new(0.3), {
            BackgroundTransparency = 0.3
        }):Play()
    end)
    
    textbox.FocusLost:Connect(function()
        TweenService:Create(stroke, TweenInfo.new(0.3), {
            Transparency = 0.7,
            Color = THEME.ACCENT
        }):Play()
        
        TweenService:Create(container, TweenInfo.new(0.3), {
            BackgroundTransparency = 0.5
        }):Play()
    end)
    
    return textbox
end

-- New Player List Dropdown function
local function createPlayerDropdown(parent, yOffset)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(0.9, 0, 0, 200)
    container.Position = UDim2.new(0.5, 0, 0, yOffset)
    container.AnchorPoint = Vector2.new(0.5, 0)
    container.BackgroundColor3 = THEME.SECONDARY
    container.BackgroundTransparency = 0.5
    container.Visible = false
    container.Parent = parent
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = container
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -10, 1, -10)
    scrollFrame.Position = UDim2.new(0, 5, 0, 5)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ScrollBarThickness = 4
    scrollFrame.Parent = container
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.Padding = UDim.new(0, 5)
    listLayout.Parent = scrollFrame

    local function createPlayerButton(player)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 0, 35)
        button.BackgroundColor3 = THEME.SECONDARY
        button.BackgroundTransparency = 0.3
        button.Text = player.Name
        button.TextColor3 = THEME.TEXT_PRIMARY
        button.TextSize = 14
        button.Font = Enum.Font.GothamMedium
        button.Parent = scrollFrame
        
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 6)
        UICorner.Parent = button
        
        button.MouseButton1Click:Connect(function()
            if excludedPlayers[player] then
                excludedPlayers[player] = nil
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundColor3 = THEME.SECONDARY
                }):Play()
            else
                excludedPlayers[player] = true
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundColor3 = Color3.fromRGB(180, 40, 40)
                }):Play()
            end
        end)

        button.MouseEnter:Connect(function()
            if not excludedPlayers[player] then
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundTransparency = 0.1
                }):Play()
            end
        end)

        button.MouseLeave:Connect(function()
            if not excludedPlayers[player] then
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundTransparency = 0.3
                }):Play()
            end
        end)
        
        return button
    end
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            createPlayerButton(player)
        end
    end
    
    Players.PlayerAdded:Connect(function(player)
        if player ~= LocalPlayer then
            createPlayerButton(player)
        end
    end)
    
    Players.PlayerRemoving:Connect(function(player)
        local button = scrollFrame:FindFirstChild(player.Name)
        if button then button:Destroy() end
    end)
    
    return container
end
-- Create combat section buttons
local aimbotButton = createButton("Aimbot: OFF", combatSection, 20)
local fovBox = createTextBox("FOV Size", combatSection, 65)
local smoothBox = createTextBox("Smoothness", combatSection, 110)

-- Create visual section buttons
local espButton = createButton("ESP: OFF", visualSection, 20)
local distanceBox = createTextBox("View Distance", visualSection, 65)
local healthToggleButton = createButton("Health: ON", visualSection, 110)

-- Create settings section buttons
local outlineColorButton = createButton("Outline: White", settingsSection, 20)
local targetPartButton = createButton("Target: Head", settingsSection, 65)
local wallCheckButton = createButton("Wall Check: OFF", settingsSection, 110)

-- Create extra section with new dropdown
local whichListButton = createButton("Player List", extraSection, 20)
local playerListDropdown = createPlayerDropdown(extraSection, 65)

-- Set default values
distanceBox.Text = "100"
fovBox.Text = "100"
smoothBox.Text = "0.2"

-- Create Highlight
local highlight = Instance.new("Highlight")
highlight.Name = "Highlight"
highlight.FillColor = Color3.fromRGB(255, 255, 255)
highlight.OutlineColor = highlightColor
highlight.FillTransparency = 1

-- Initialize Variables
local espEnabled = false
local aimbotEnabled = false
local target = nil
local FOVSize = 100
local smoothness = 0.2
local aimKey = Enum.KeyCode.X

-- Create FOV Circle
local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.Color = THEME.ACCENT
FOVCircle.Transparency = 1
FOVCircle.Visible = false
FOVCircle.Filled = false

-- Utility Functions
local function canSeeTarget(target)
    local rayOrigin = Camera.CFrame.Position
    local rayDirection = (target.Position - rayOrigin).Unit
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, target.Parent}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    
    local raycastResult = workspace:Raycast(rayOrigin, rayDirection * (target.Position - rayOrigin).Magnitude, raycastParams)
    return raycastResult == nil
end

local function isInRange(character)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") or
       not character or not character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    local distance = (LocalPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
    return distance <= tonumber(distanceBox.Text)
end

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and not excludedPlayers[player] and 
           player.Character and 
           player.Character:FindFirstChild("Head") and
           player.Character:FindFirstChild("Humanoid") and
           player.Character.Humanoid.Health > 0 then
            
            local screenPoint = Camera:WorldToScreenPoint(player.Character.Head.Position)
            local screenCenter = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
            
            if screenPoint.Z > 0 then
                local screenPosition = Vector2.new(screenPoint.X, screenPoint.Y)
                local distanceFromCenter = (screenPosition - screenCenter).Magnitude
                
                if distanceFromCenter <= FOVSize and distanceFromCenter < shortestDistance then
                    closestPlayer = player
                    shortestDistance = distanceFromCenter
                end
            end
        end
    end
    return closestPlayer
end

local function createHealthDisplay(player)
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if humanoid and isInRange(player.Character) then
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.Name = "HealthDisplay"
        billboardGui.Size = UDim2.new(0, 200, 0, 50)
        billboardGui.StudsOffset = Vector3.new(0, 3, 0)
        billboardGui.Enabled = showHealth
        billboardGui.AlwaysOnTop = true
        billboardGui.Parent = player.Character.HumanoidRootPart

        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.TextColor3 = THEME.TEXT_PRIMARY
        nameLabel.TextSize = 14
        nameLabel.Font = Enum.Font.GothamBold
        nameLabel.Text = player.Name
        nameLabel.Parent = billboardGui

        local healthLabel = Instance.new("TextLabel")
        healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
        healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
        healthLabel.BackgroundTransparency = 1
        healthLabel.TextColor3 = THEME.TEXT_PRIMARY
        healthLabel.TextSize = 12
        healthLabel.Font = Enum.Font.GothamMedium
        healthLabel.Parent = billboardGui

        local function updateHealth()
            local health = math.floor((humanoid.Health / humanoid.MaxHealth) * 100)
            healthLabel.Text = health .. "%"
            if health > 75 then
                healthLabel.TextColor3 = THEME.SUCCESS
            elseif health > 25 then
                healthLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            else
                healthLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
        end

        humanoid.HealthChanged:Connect(updateHealth)
        updateHealth()
    end
end

local function addPlayerHighlight(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local highlightClone = highlight:Clone()
        highlightClone.Adornee = player.Character
        highlightClone.FillTransparency = 1
        highlightClone.OutlineColor = highlightColor
        highlightClone.OutlineTransparency = 0
        highlightClone.Parent = player.Character.HumanoidRootPart
        highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    end
end
-- Button Event Connections
espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espButton.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    TweenService:Create(espButton, TweenInfo.new(0.3), {
        BackgroundColor3 = espEnabled and THEME.SUCCESS or THEME.SECONDARY
    }):Play()
    
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and isInRange(player.Character) then
                addPlayerHighlight(player)
                createHealthDisplay(player)
            end
        end
    else
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local highlight = player.Character.HumanoidRootPart:FindFirstChild("Highlight")
                local health = player.Character.HumanoidRootPart:FindFirstChild("HealthDisplay")
                if highlight then highlight:Destroy() end
                if health then health:Destroy() end
            end
        end
    end
end)

aimbotButton.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    aimbotButton.Text = aimbotEnabled and "Aimbot: ON" or "Aimbot: OFF"
    TweenService:Create(aimbotButton, TweenInfo.new(0.3), {
        BackgroundColor3 = aimbotEnabled and THEME.SUCCESS or THEME.SECONDARY
    }):Play()
    FOVCircle.Visible = aimbotEnabled
end)

healthToggleButton.MouseButton1Click:Connect(function()
    showHealth = not showHealth
    healthToggleButton.Text = showHealth and "Health: ON" or "Health: OFF"
    TweenService:Create(healthToggleButton, TweenInfo.new(0.3), {
        BackgroundColor3 = showHealth and THEME.SUCCESS or THEME.SECONDARY
    }):Play()
end)

whichListButton.MouseButton1Click:Connect(function()
    whichListEnabled = not whichListEnabled
    TweenService:Create(whichListButton, TweenInfo.new(0.3), {
        BackgroundColor3 = whichListEnabled and THEME.SUCCESS or THEME.SECONDARY
    }):Play()
    playerListDropdown.Visible = whichListEnabled
end)

outlineColorButton.MouseButton1Click:Connect(function()
    currentColorIndex = (currentColorIndex % #colors) + 1
    highlightColor = colors[currentColorIndex].color
    outlineColorButton.Text = "Outline: " .. colors[currentColorIndex].name
    
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and
               player.Character:FindFirstChild("HumanoidRootPart") then
                local highlightInst = player.Character.HumanoidRootPart:FindFirstChild("Highlight")
                if highlightInst then
                    highlightInst.OutlineColor = highlightColor
                end
            end
        end
    end
end)

targetPartButton.MouseButton1Click:Connect(function()
    targetBody = not targetBody
    targetPartButton.Text = targetBody and "Target: Body" or "Target: Head"
    TweenService:Create(targetPartButton, TweenInfo.new(0.3), {
        BackgroundColor3 = targetBody and THEME.SUCCESS or THEME.SECONDARY
    }):Play()
end)

wallCheckButton.MouseButton1Click:Connect(function()
    wallCheckEnabled = not wallCheckEnabled
    wallCheckButton.Text = wallCheckEnabled and "Wall Check: ON" or "Wall Check: OFF"
    TweenService:Create(wallCheckButton, TweenInfo.new(0.3), {
        BackgroundColor3 = wallCheckEnabled and THEME.SUCCESS or THEME.SECONDARY
    }):Play()
end)

-- Input Validation
distanceBox:GetPropertyChangedSignal("Text"):Connect(function()
    local newText = distanceBox.Text:gsub("[^%d]", "")
    if distanceBox.Text ~= newText then
        distanceBox.Text = newText
    end
end)

fovBox:GetPropertyChangedSignal("Text"):Connect(function()
    local newText = fovBox.Text:gsub("[^%d]", "")
    if fovBox.Text ~= newText then
        fovBox.Text = newText
    end
    FOVSize = tonumber(newText) or 100
end)

smoothBox:GetPropertyChangedSignal("Text"):Connect(function()
    local newText = smoothBox.Text:gsub("[^%d.]", "")
    if smoothBox.Text ~= newText then
        smoothBox.Text = newText
    end
    smoothness = tonumber(newText) or 0.2
end)

-- Player Events
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        if espEnabled and player ~= LocalPlayer and isInRange(character) then
            character:WaitForChild("HumanoidRootPart")
            addPlayerHighlight(player)
            createHealthDisplay(player)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local highlight = player.Character.HumanoidRootPart:FindFirstChild("Highlight")
        local health = player.Character.HumanoidRootPart:FindFirstChild("HealthDisplay")
        if highlight then highlight:Destroy() end
        if health then health:Destroy() end
    end
end)

-- RunService Updates
RunService.Heartbeat:Connect(function()
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                if isInRange(player.Character) then
                    if not player.Character.HumanoidRootPart:FindFirstChild("Highlight") then
                        addPlayerHighlight(player)
                    end
                    local healthDisplay = player.Character.HumanoidRootPart:FindFirstChild("HealthDisplay")
                    if healthDisplay then
                        healthDisplay.Enabled = showHealth
                    elseif showHealth then
                        createHealthDisplay(player)
                    end
                else
                    local highlight = player.Character.HumanoidRootPart:FindFirstChild("Highlight")
                    local health = player.Character.HumanoidRootPart:FindFirstChild("HealthDisplay")
                    if highlight then highlight:Destroy() end
                    if health then health:Destroy() end
                end
            end
        end
    end
end)

RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    FOVCircle.Radius = FOVSize
    
    if aimbotEnabled and (UserInputService:IsKeyDown(aimKey) or UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2)) then
        target = getClosestPlayer()
        if target and target.Character then
            local targetPart = targetBody and target.Character:FindFirstChild("HumanoidRootPart") or target.Character:FindFirstChild("Head")
            if targetPart and (not wallCheckEnabled or canSeeTarget(targetPart)) then
                local targetPos = targetPart.Position
                local currentCFrame = Camera.CFrame
                local newCFrame = CFrame.new(currentCFrame.Position, targetPos)
                Camera.CFrame = currentCFrame:Lerp(newCFrame, smoothness)
            end
        end
    else
        target = nil
    end
end)

-- GUI Visibility Toggle
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Insert then
        guiVisible = not guiVisible
        gui.Enabled = guiVisible
    end
end)

-- Draggable Frame
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
