local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local guiVisible = true
local showHealth = true
local whichListEnabled = false
local excludedPlayers = {}

-- ระบบสี outline
local highlightColor = Color3.fromRGB(255, 255, 255)
local colors = {
    {name = "White", color = Color3.fromRGB(255, 255, 255)},
    {name = "Red", color = Color3.fromRGB(255, 0, 0)},
    {name = "Green", color = Color3.fromRGB(0, 255, 0)},
    {name = "Blue", color = Color3.fromRGB(0, 0, 255)},
    {name = "Yellow", color = Color3.fromRGB(255, 255, 0)},
    {name = "Purple", color = Color3.fromRGB(255, 0, 255)}
}
local currentColorIndex = 1

local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 370)
frame.Position = UDim2.new(0.8, 0, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
frame.BorderSizePixel = 0
frame.ClipsDescendants = true
frame.Parent = gui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = frame

local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
})
gradient.Rotation = 45
gradient.Parent = frame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "!DOG! Combat Assistant"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 18
title.Font = Enum.Font.GothamBold
title.Parent = frame

local function createButton(text, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.9, 0, 0, 40)
    button.Position = position
    button.AnchorPoint = Vector2.new(0.5, 0)
    button.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.Font = Enum.Font.GothamMedium
    button.AutoButtonColor = false
    button.Parent = frame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(60, 60, 80)
    stroke.Thickness = 1
    stroke.Parent = button
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.3), {
            BackgroundColor3 = Color3.fromRGB(45, 45, 55)
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.3), {
            BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        }):Play()
    end)
    
    return button
end

local function createWhichList()
   local listFrame = Instance.new("Frame") 
   listFrame.Size = UDim2.new(0, 200, 0, 300)
   listFrame.Position = UDim2.new(1, 10, 0, 0)
   listFrame.AnchorPoint = Vector2.new(1, 0)
   listFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
   listFrame.BorderSizePixel = 0
   listFrame.Visible = false
   listFrame.Parent = frame

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = listFrame

    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -10, 1, -50)
    scrollFrame.Position = UDim2.new(0, 5, 0, 45)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ScrollBarThickness = 4
    scrollFrame.Parent = listFrame

    local listLayout = Instance.new("UIListLayout")
    listLayout.Padding = UDim.new(0, 5)
    listLayout.Parent = scrollFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 40)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "รายชื่อผู้เล่น"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 16
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = listFrame

    local searchBox = Instance.new("TextBox")
    searchBox.Size = UDim2.new(0.9, 0, 0, 30)
    searchBox.Position = UDim2.new(0.05, 0, 0, 5)
    searchBox.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    searchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    searchBox.PlaceholderText = "ค้นหาผู้เล่น..."
    searchBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    searchBox.TextSize = 14
    searchBox.Font = Enum.Font.GothamMedium
    searchBox.Parent = scrollFrame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = searchBox

    local function createPlayerButton(player)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, -10, 0, 40)
        button.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        button.Name = player.Name
        button.Parent = scrollFrame

        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 6)
        buttonCorner.Parent = button

        local playerImage = Instance.new("ImageLabel")
        playerImage.Size = UDim2.new(0, 30, 0, 30)
        playerImage.Position = UDim2.new(0, 5, 0, 5)
        playerImage.BackgroundTransparency = 1
        playerImage.Image = Players:GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size48x48)
        playerImage.Parent = button

        local imageCorner = Instance.new("UICorner")
        imageCorner.CornerRadius = UDim.new(0, 15)
        imageCorner.Parent = playerImage

        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, -50, 1, 0)
        nameLabel.Position = UDim2.new(0, 45, 0, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = player.Name
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.TextSize = 14
        nameLabel.Font = Enum.Font.GothamMedium
        nameLabel.TextXAlignment = Enum.TextXAlignment.Left
        nameLabel.Parent = button

        button.MouseEnter:Connect(function()
            if not excludedPlayers[player] then
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundColor3 = Color3.fromRGB(45, 45, 55)
                }):Play()
            end
        end)

        button.MouseLeave:Connect(function()
            if not excludedPlayers[player] then
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundColor3 = Color3.fromRGB(35, 35, 45)
                }):Play()
            end
        end)

        button.MouseButton1Click:Connect(function()
            if excludedPlayers[player] then
                excludedPlayers[player] = nil
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundColor3 = Color3.fromRGB(35, 35, 45)
                }):Play()
            else
                excludedPlayers[player] = true
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundColor3 = Color3.fromRGB(180, 40, 40)
                }):Play()
            end
        end)

        return button
    end

    searchBox.Changed:Connect(function(property)
        if property == "Text" then
            local searchText = searchBox.Text:lower()
            for _, button in ipairs(scrollFrame:GetChildren()) do
                if button:IsA("TextButton") then
                    if searchText == "" then
                        button.Visible = true
                    else
                        button.Visible = button.Name:lower():find(searchText) ~= nil
                    end
                end
            end
        end
    end)

    Players.PlayerAdded:Connect(function(player)
        if player ~= LocalPlayer then
            createPlayerButton(player)
        end
    end)

    Players.PlayerRemoving:Connect(function(player)
        local button = scrollFrame:FindFirstChild(player.Name)
        if button then
            button:Destroy()
        end
    end)

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            createPlayerButton(player)
        end
    end

    return listFrame, scrollFrame
end

local function toggleGUI()
    guiVisible = not guiVisible
    gui.Enabled = guiVisible
end

local function createTextBox(placeholder, position)
    local textbox = Instance.new("TextBox")
    textbox.Size = UDim2.new(0.9, 0, 0, 35)
    textbox.Position = position
    textbox.AnchorPoint = Vector2.new(0.5, 0)
    textbox.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    textbox.PlaceholderText = placeholder
    textbox.PlaceholderColor3 = Color3.fromRGB(120, 120, 140)
    textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textbox.TextSize = 14
    textbox.Font = Enum.Font.GothamMedium
    textbox.ClearTextOnFocus = false
    textbox.Parent = frame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = textbox
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(60, 60, 80)
    stroke.Thickness = 1
    stroke.Parent = textbox
    
    textbox.Focused:Connect(function()
        TweenService:Create(stroke, TweenInfo.new(0.3), {
            Color = Color3.fromRGB(100, 100, 255)
        }):Play()
    end)
    
    textbox.FocusLost:Connect(function()
        TweenService:Create(stroke, TweenInfo.new(0.3), {
            Color = Color3.fromRGB(60, 60, 80)
        }):Play()
    end)
    
    return textbox
end

local espButton = createButton("ESP: OFF", UDim2.new(0.5, 0, 0, 50))
local distanceBox = createTextBox("View Distance", UDim2.new(0.5, 0, 0, 100))
local aimbotButton = createButton("Aimbot: OFF", UDim2.new(0.5, 0, 0, 145))
local fovBox = createTextBox("FOV Size", UDim2.new(0.5, 0, 0, 190))
local smoothBox = createTextBox("Smoothness", UDim2.new(0.5, 0, 0, 235))
local healthToggleButton = createButton("Health: ON", UDim2.new(0.5, 0, 0, 280))
local whichListButton = createButton("Which List: OFF", UDim2.new(0.5, 0, 0, 325))
local outlineColorButton = createButton("Outline: White", UDim2.new(0.5, 0, 0, 370))

local function addClickEffect(button)
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            Size = UDim2.new(0.85, 0, 0, 40)
        }):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            Size = UDim2.new(0.9, 0, 0, 40)
        }):Play()
    end)
end

addClickEffect(espButton)
addClickEffect(aimbotButton)
addClickEffect(whichListButton)
addClickEffect(outlineColorButton)

distanceBox.Text = "100"
fovBox.Text = "100"
smoothBox.Text = "0.2"

local highlight = Instance.new("Highlight")
highlight.Name = "Highlight"
highlight.FillColor = Color3.fromRGB(255, 255, 255)
highlight.OutlineColor = highlightColor
local espEnabled = false
local aimbotEnabled = false
local target = nil
local FOVSize = 100
local smoothness = 0.2
local aimKey = Enum.KeyCode.X

local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.Color = Color3.fromRGB(255, 255, 255)
FOVCircle.Transparency = 1
FOVCircle.Visible = false
FOVCircle.Filled = false

distanceBox:GetPropertyChangedSignal("Text"):Connect(function()
    local newText = distanceBox.Text:gsub("[^%d]", "")
    if distanceBox.Text ~= newText then
        distanceBox.Text = newText
    end
end)

fovBox:GetPropertyChangedSignal("Text"):Connect(function()
    local newText = fovBox.Text:gsub("[^%d]", "")
    if fovBox.Text ~= newText then
        fovBox.Text = newText
    end
    FOVSize = tonumber(newText) or 100
end)

smoothBox:GetPropertyChangedSignal("Text"):Connect(function()
    local newText = smoothBox.Text:gsub("[^%d.]", "")
    if smoothBox.Text ~= newText then
        smoothBox.Text = newText
    end
    smoothness = tonumber(newText) or 0.2
end)

local function isInRange(character)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") or
       not character or not character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    local distance = (LocalPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
    return distance <= tonumber(distanceBox.Text)
end

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and not excludedPlayers[player] and 
           player.Character and 
           player.Character:FindFirstChild("Head") and
           player.Character:FindFirstChild("Humanoid") and
           player.Character.Humanoid.Health > 0 then
            
            local screenPoint = Camera:WorldToScreenPoint(player.Character.Head.Position)
            local screenCenter = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
            
            if screenPoint.Z > 0 then
                local screenPosition = Vector2.new(screenPoint.X, screenPoint.Y)
                local distanceFromCenter = (screenPosition - screenCenter).Magnitude
                
                if distanceFromCenter <= FOVSize and distanceFromCenter < shortestDistance then
                    closestPlayer = player
                    shortestDistance = distanceFromCenter
                end
            end
        end
    end
    return closestPlayer
end

local function createHealthDisplay(player)
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if humanoid and isInRange(player.Character) then
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.Name = "HealthDisplay"
        billboardGui.Size = UDim2.new(0, 200, 0, 50)
        billboardGui.StudsOffset = Vector3.new(0, 3, 0)
        billboardGui.Enabled = showHealth
        billboardGui.AlwaysOnTop = true
        billboardGui.Parent = player.Character.HumanoidRootPart

        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
        nameLabel.Position = UDim2.new(0, 0, 0, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.TextColor3 = Color3.new(1, 1, 1)
        nameLabel.TextSize = 10
        nameLabel.Text = player.Name
        nameLabel.Parent = billboardGui

        local healthLabel = Instance.new("TextLabel")
        healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
        healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
        healthLabel.BackgroundTransparency = 1
        healthLabel.TextColor3 = Color3.new(1, 1, 1)
        healthLabel.TextSize = 10
        healthLabel.Parent = billboardGui

        local function updateHealth()
            local health = math.floor((humanoid.Health / humanoid.MaxHealth) * 100)
            healthLabel.Text = health .. "%"
            if health > 75 then
                healthLabel.TextColor3 = Color3.new(0, 1, 0)
            elseif health > 25 then
                healthLabel.TextColor3 = Color3.new(1, 1, 0)
            else
                healthLabel.TextColor3 = Color3.new(1, 0, 0)
            end
        end

        humanoid.HealthChanged:Connect(updateHealth)
        updateHealth()
    end
end

local function addPlayerHighlight(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local highlightClone = highlight:Clone()
        highlightClone.Adornee = player.Character
        highlightClone.FillTransparency = 1
        highlightClone.OutlineColor = highlightColor
        highlightClone.OutlineTransparency = 0
        highlightClone.Parent = player.Character.HumanoidRootPart
        highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    end
end

local whichListFrame = createWhichList()

espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    if espEnabled then
        espButton.Text = "ESP: ON"
        TweenService:Create(espButton, TweenInfo.new(0.3), {
            BackgroundColor3 = Color3.fromRGB(40, 180, 120)
        }):Play()
        
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and isInRange(player.Character) then
                addPlayerHighlight(player)
                createHealthDisplay(player)
            end
        end
    else
        espButton.Text = "ESP: OFF"
        TweenService:Create(espButton, TweenInfo.new(0.3), {
            BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        }):Play()
        
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local highlight = player.Character.HumanoidRootPart:FindFirstChild("Highlight")
                local health = player.Character.HumanoidRootPart:FindFirstChild("HealthDisplay")
                if highlight then highlight:Destroy() end
                if health then health:Destroy() end
            end
        end
    end
end)

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        if espEnabled and player ~= LocalPlayer and isInRange(character) then
            character:WaitForChild("HumanoidRootPart")
            addPlayerHighlight(player)
            createHealthDisplay(player)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local highlight = player.Character.HumanoidRootPart:FindFirstChild("Highlight")
        local health = player.Character.HumanoidRootPart:FindFirstChild("HealthDisplay")
        if highlight then highlight:Destroy() end
        if health then health:Destroy() end
    end
end)

RunService.Heartbeat:Connect(function()
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                if isInRange(player.Character) then
                    if not player.Character.HumanoidRootPart:FindFirstChild("Highlight") then
                        addPlayerHighlight(player)
                    end
                    local healthDisplay = player.Character.HumanoidRootPart:FindFirstChild("HealthDisplay")
                    if healthDisplay then
                        healthDisplay.Enabled = showHealth
                    elseif showHealth then
                        createHealthDisplay(player)
                    end
                else
                    local highlight = player.Character.HumanoidRootPart:FindFirstChild("Highlight")
                    local health = player.Character.HumanoidRootPart:FindFirstChild("HealthDisplay")
                    if highlight then highlight:Destroy() end
                    if health then health:Destroy() end
                end
            end
        end
    end
end)

healthToggleButton.MouseButton1Click:Connect(function()
    showHealth = not showHealth
    healthToggleButton.Text = showHealth and "Health: ON" or "Health: OFF"
    TweenService:Create(healthToggleButton, TweenInfo.new(0.3), {
        BackgroundColor3 = showHealth and Color3.fromRGB(40, 180, 120) or Color3.fromRGB(35, 35, 45)
    }):Play()
end)

aimbotButton.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    if aimbotEnabled then
        aimbotButton.Text = "Aimbot: ON"
        TweenService:Create(aimbotButton, TweenInfo.new(0.3), {
            BackgroundColor3 = Color3.fromRGB(40, 180, 120)
        }):Play()
        FOVCircle.Visible = true
    else
        aimbotButton.Text = "Aimbot: OFF"
        TweenService:Create(aimbotButton, TweenInfo.new(0.3), {
            BackgroundColor3 = Color3.fromRGB(35, 35, 45)
        }):Play()
        FOVCircle.Visible = false
        target = nil
    end
end)

whichListButton.MouseButton1Click:Connect(function()
    whichListEnabled = not whichListEnabled
    whichListButton.Text = whichListEnabled and "Which List: ON" or "Which List: OFF"
    TweenService:Create(whichListButton, TweenInfo.new(0.3), {
        BackgroundColor3 = whichListEnabled and Color3.fromRGB(40, 180, 120) or Color3.fromRGB(35, 35, 45)
    }):Play()
    whichListFrame.Visible = whichListEnabled
end)

outlineColorButton.MouseButton1Click:Connect(function()
    currentColorIndex = (currentColorIndex % #colors) + 1
    highlightColor = colors[currentColorIndex].color
    outlineColorButton.Text = "Outline: " .. colors[currentColorIndex].name
    
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and
               player.Character:FindFirstChild("HumanoidRootPart") then
                local highlightInst = player.Character.HumanoidRootPart:FindFirstChild("Highlight")
                if highlightInst then
                    highlightInst.OutlineColor = highlightColor
                end
            end
        end
    end
end)

RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
    FOVCircle.Radius = FOVSize
    
    if aimbotEnabled and (UserInputService:IsKeyDown(aimKey) or UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2)) then
        target = getClosestPlayer()
        if target and target.Character and target.Character:FindFirstChild("Head") then
            local targetPos = target.Character.Head.Position
            local currentCFrame = Camera.CFrame
            local newCFrame = CFrame.new(currentCFrame.Position, targetPos)
            Camera.CFrame = currentCFrame:Lerp(newCFrame, smoothness)
        end
    else
        target = nil
    end
end)

UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Insert then
        toggleGUI()
    end
end)

local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
